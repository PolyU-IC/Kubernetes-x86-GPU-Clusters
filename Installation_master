@@@ Kubernetes Master Node Installation Guidelines
@@@ VincentChan

1) Unplug your GPU card from your motherboard

2) Install Ubuntu 16.04 to your harddisk

3) Install Nvidia driver 430
   $ sudo add-apt-repository ppa:graphics-drivers/ppa
   $ sudo apt update
   $ sudo apt install ubuntu-drivers-common
   $ sudo apt install nvidia-430

   or ./tools/install_gtx1650_430.sh

4) Shutdown and plug GTX1650 back to the motherboard

5) Power it up and check the nvidia driver
   $ nvidia-smi

6) Update and upgrade ubuntu
   $ sudo apt-get update && sudo apt-get upgrade

7) Install docker
   $ sudo apt -y update
   $ sudo apt -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
   $ sudo apt remove docker docker-engine docker.io containerd runc
   $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   $ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu    $(lsb_release -cs) stable"
   $ sudo apt update
   $ sudo apt -y install docker-ce docker-ce-cli containerd.io
   $ sudo usermod -aG docker vincent
   $ newgrp docker
   $ docker version

8) Install nvidia-docker version 2.0

   https://github.com/nvidia/nvidia-docker/wiki/Installation-(version-2.0)#prerequisites

   $ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
   $ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
   $ curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
   $ sudo apt-get update
   $ sudo apt-get install nvidia-docker2
   Choose "Y" for daemon.json
   $ sudo pkill -SIGHUP dockerd

9) Install nvidia-container-runtime

   https://github.com/nvidia/nvidia-container-runtime#installation

   $ curl -s -L https://nvidia.github.io/nvidia-container-runtime/gpgkey | sudo apt-key add -
   $ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
   $ curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.list | sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
   $ sudo apt-get update
   $ sudo apt-get install nvidia-container-runtime

10) Configure docker runtime
   $ replace the /etc/docker/daemon.json with the one in repository
   $ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
   $ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
   $ curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
   $ sudo apt-get update && sudo apt-get install -y nvidia-docker2
   $ sudo systemctl restart docker

  

11) Install kubernetes k8s
   $ cd tools/
   $ sudo chmod +x install_k8s.sh
   $ sudo ./install.sh

12) Permanently disable swap
   $ sudo swapoff -a
   $ sudo gedit /etc/fstab
   Comment the lines with "swap"
   $ sudo reboot
   $ sudo swapoff -a

13) Initialize cluster
   $ sudo kubeadm init --pod-network-cidr=10.244.0.0/16

    **In case you want to reset, $ sudo kubeadm reset

14) Follow the instructions of kuberentes
   $ mkdir -p $HOME/.kube
   $ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   $ sudo chown $(id -u):$(id -g) $HOME/.kube/config

15) Apply flannel
   $ sudo kubectl create -f https://raw.githubusercontent.com/coreos/flannel/v0.12.0/Documentation/kube-flannel.yml

16) Enabling GPU Support in Kubernetes
   $ sudo kubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/1.0.0-beta6/nvidia-device-plugin.yml

17) Check kubernetes nodes
   $ sudo kubectl get nodes
